services:
  postgres:
    container_name: postgres
    image: postgres:17
    networks:
      - movie
    env_file:
      - .env
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  nats:
    container_name: nats
    image: nats:latest
    env_file:
      - .env
    networks:
      - movie
    ports:
      - "${NATS_HOST_PORT_1}:${NATS_CONTAINER_PORT_1}"
      - "${NATS_HOST_PORT_2}:${NATS_CONTAINER_PORT_2}"
    volumes:
      - ./nats/jetstream:/jetstream
      - ./nats/movie_node.conf:/etc/nats/movie_node.conf
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8222/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  jetstream:
    container_name: jetstream
    build:
      context: .
    networks:
      - movie
    volumes:
      - ./jetstream:/app
    command: ["python", "jetstream.py"]
    depends_on:
      - postgres
      - nats

  worker-omdb:
    container_name: worker-omdb
    build:
      context: .
    networks:
      - movie
    volumes:
      - ./omdb:/app
    command: ["python", "omdb_publisher.py"]
    depends_on:
      - postgres
      - nats
      - jetstream

  subscriber:
    container_name: subscriber
    build:
      context: .
    networks:
      - movie
    volumes:
      - ./subscriber:/app
    command: ["python", "subscriber.py"]
    depends_on:
      - worker-omdb
      - jetstream
      - nats

networks:
  movie:
    driver: bridge
